#!./interpreter/yasl_linux

#!
"" "" 1 @( + read) ! 
][ =:3 ! 						//explode on st0 and input count on st3
3:=:6 4:6 6:/:6
1:6
1:1
6:@(
		6:=:6 1:=:2	1:=:2 1:1	1:+:1
		2:*:2 6:=:6	2:=:6 6:<:6	6:? ("Error: wrong input\n":6 6:print 1:6 6:exit)
		2:=:6 6:==:6 6:? (0:6) : (1:6)
)
1:1 1:-:1 1:=:1 6:=:6 "Image received, nb pixels : ":6 6:print 6:print "\n":6 6:print
"Found square : ":1 1:print 1:print "\n":1 1:print
2:#! 6:#! 1:=:7 1:#!

"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/":1

3:%@(
	1:%][:1 1:=:2 1:!       	//explode base64 on st1 and put count on st2
	1:4							//setup st4 for inner loop condition
	4:%@(
		1:2 2:-:2				//--base64 counter
		//0:=:0 0:print " ":0 0:print
		0:=:0
		1:=:0 
		1:! 
		//0:=:0 0:print "\n":0 0:print
		0:==:0
		0:? 
		(2:=:5 0:4)  	//if base64 char == input char put base counter in st5
		: (2:=:2 0:2 2:==:2 2:? ("Error. Non-base64 char found.\n":0 0:print 1:0 0:exit))
	)		
	0:!							//remove last 
	4:!							//reset condition to 1	
	1:#:1
	//												1:=:1 "count: ":1 1:print 1:print "\n":1 1:print
	1:1 1:-:1 1:=:1 0:1 1:!=:1 1:? (1:#!):(1:!)	//delete all remaining base64 characters
	1:3 3:-:3							//--(input char count)
)
5:#:3 4:3 3:/:3 						//

0:9
3:%@(
	18:5 5:<<:6 12:5 5:<<:6 6:5 5:<<:6 0:5 5:<<:6 	//but shiftet bits into st6 
	3:6 6:#+:6 6:=:5 6:!							//copy sum to st5 and clean st6
	255:5 5:%&:0 8:5 5:<<:5 5:%&:0 8:0 0:>>:0 8:5 5:<<:5 5:%&:0 5:! 16:0 0:>>:0 // extract RGB
	16:7 36:7 0:=:7 0:! 6:7 7:*:7 256:7 7:/:7 7:*:7 6:7 0:=:7 0:! 6:7 7:*:7 256:7 7:/:7 7:*:7 0:=:7 0:! 6:7 7:*:7 256:7 7:/:7 7:+:7 7:+:7 7:+:7 7:=:0 7:! //calculate cli color
//	"\e[48:5:":7 0:=:7 0:! "":7 7:+:7 7:+:7 "m ":7 7:+:7 7:print
	7:("\e[48:5:" (0:= 0:! "" +) + "m  " + print):7
	9:(1 + = 7:= == ? ("\e[0m\n" print # #! 0)):9
	5:!
	1:3 3:-:3										// --(count)
)

